{"ast":null,"code":"import _classCallCheck from \"/Users/dylanwestover/Documents/Bloc/react-add-comments/react-add-comment-context-challenge-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dylanwestover/Documents/Bloc/react-add-comments/react-add-comment-context-challenge-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dylanwestover/Documents/Bloc/react-add-comments/react-add-comment-context-challenge-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dylanwestover/Documents/Bloc/react-add-comments/react-add-comment-context-challenge-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dylanwestover/Documents/Bloc/react-add-comments/react-add-comment-context-challenge-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dylanwestover/Documents/Bloc/react-add-comments/react-add-comment-context-challenge-master/src/CommentForm.js\";\nimport React, { Component } from 'react';\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (ev) {\n      ev.preventDefault();\n      var _ev$target = ev.target,\n          author = _ev$target.author,\n          comment = _ev$target.comment;\n      /* change code */\n\n      console.log({\n        author: author.value,\n        comment: comment.value\n      });\n      author.value = '';\n      comment.value = '';\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"CommentForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Add a comment\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Author:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Comment:\"), React.createElement(\"textarea\", {\n        id: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Post comment\")));\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nexport { CommentForm as default };","map":{"version":3,"sources":["/Users/dylanwestover/Documents/Bloc/react-add-comments/react-add-comment-context-challenge-master/src/CommentForm.js"],"names":["React","Component","CommentForm","handleSubmit","ev","preventDefault","target","author","comment","console","log","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,W;;;;;;;;;;;;;;;;;;UAGnBC,Y,GAAe,UAACC,EAAD,EAAQ;AACrBA,MAAAA,EAAE,CAACC,cAAH;AADqB,uBAEOD,EAAE,CAACE,MAFV;AAAA,UAEbC,MAFa,cAEbA,MAFa;AAAA,UAELC,OAFK,cAELA,OAFK;AAIrB;;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AACVH,QAAAA,MAAM,EAAEA,MAAM,CAACI,KADL;AAEVH,QAAAA,OAAO,EAAEA,OAAO,CAACG;AAFP,OAAZ;AAKAJ,MAAAA,MAAM,CAACI,KAAP,GAAe,EAAf;AACAH,MAAAA,OAAO,CAACG,KAAR,GAAgB,EAAhB;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAM,QAAA,QAAQ,EAAE,KAAKR,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,CAFF,CADF;AAkBD;;;;EArCsCF,S;;SAApBC,W","sourcesContent":["import React, { Component } from 'react'\n\nexport default class CommentForm extends Component {\n  // static contextType = CommentsContext\n\n  handleSubmit = (ev) => {\n    ev.preventDefault()\n    const { author, comment } = ev.target\n\n    /* change code */\n\n    console.log({\n      author: author.value,\n      comment: comment.value,\n    })\n\n    author.value = ''\n    comment.value = ''\n  }\n\n  render() {\n    return (\n      <div className='CommentForm'>\n        <h3>Add a comment</h3>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor='author'>Author:</label>\n            <input type='text' id='author' />\n          </div>\n          <div>\n            <label htmlFor='comment'>Comment:</label>\n            <textarea id='comment' />\n          </div>\n          <button type='submit'>\n            Post comment\n          </button>\n        </form>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}